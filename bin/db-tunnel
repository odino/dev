#!/usr/bin/env abs
# Utility to SSH tunnel for DBs
#
# You need a config file such as:
# # jumphost: jumphost.domain.com
#
# db_instance
# host: 1.2.3.4
config_file = flag("f")
db = flag("db")
env = flag("env") || 'live'
status = flag("status") || 'up'

if !config_file || !db {
    exit(1, "usage: -f my_config.txt -db database")
}

db += "_$env"
host =  `cat $config_file | grep '$db' -A 1`.lines()[1].split(":")[1].trim()
user =  `cat $config_file | grep '$db' -A 2`.lines()[2].split(":")[1].trim()
pwd  =  `cat $config_file | grep '$db' -A 3`.lines()[3].split(":")[1].trim()
port =  `cat $config_file | grep '$db' -A 4`.lines()[4].split(":")[1].trim()
jumphost = `cat $config_file | grep 'jumphost_$env'`.split(":")[1].trim()

mysql_conn = "mysql -h 127.0.0.1 -u $user -P $port -p$pwd"
echo(mysql_conn)

if args()[-1] == "connect" {
    exec(mysql_conn)
    return;
}

up = `$mysql_conn -e 'SELECT 1'`.ok
cmd = "ssh -i ~/.ssh/id_rsa anadalin@$jumphost -L $port:$host:3306"

if status == 'down' {
    pid = `ps aux | grep ssh | grep '$host' | grep '$port'`.split().filter(f(x){!!x})[1]
    `kill $pid`
    exit(0, "tunnel down")
}

if up {
    exit(0, "tunnel up")
}

echo(cmd)
`$cmd &`
